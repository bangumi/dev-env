services:
  debezium:
    image: debezium/server:2.7.3.Final
    container_name: debezium
    user: "0:0"
    volumes:
      - ./data/debezium:/debezium/data
    environment:
      "quarkus.log.level": "WARN"

      "debezium.sink.type": "kafka"
      "debezium.sink.kafka.producer.bootstrap.servers": "kafka:9092"
      "debezium.sink.kafka.producer.key.serializer": "org.apache.kafka.common.serialization.StringSerializer"
      "debezium.sink.kafka.producer.value.serializer": "org.apache.kafka.common.serialization.StringSerializer"

      "debezium.format.key.schemas.enable": 'false'
      "debezium.format.value.schemas.enable": 'false'

      #      "debezium.sink.redis.producer.key.serializer": "org.apache.kafka.common.serialization.StringSerializer"
      #      "debezium.sink.redis.producer.value.serializer": "org.apache.kafka.common.serialization.StringSerializer"
      "debezium.source.connector.class": "io.debezium.connector.mysql.MySqlConnector"
      "debezium.source.database.hostname": "host.docker.internal"
      "debezium.source.database.port": "3306"
      "debezium.source.database.server.id": "5"
      "debezium.source.database.user": "root"
      "debezium.source.database.password": "secret"
      "debezium.source.database.server.name": "chii"
      "debezium.source.database.dbname": "bangumi"
      "debezium.source.database.include.list": "bangumi"
      "debezium.source.table.include.list": "bangumi.chii_members,bangumi.chii_subjects,bangumi.chii_subject_fields,bangumi.chii_subject_revisions,bangumi.chii_pms"
      "debezium.source.snapshot.mode": "initial"
      "debezium.source.snapshot.locking.mode": "none"
      "quarkus.log.console.json": "false"

      "debezium.source.offset.storage.file.filename": "/debezium/data/offsets.dat"

      "debezium.source.topic.prefix": "debezium.chii"
      "debezium.source.schema.history.internal.kafka.topic": "debezium.history"
      "debezium.source.schema.history.internal.kafka.bootstrap.servers": "kafka:9092"

    extra_hosts:
      - "host.docker.internal:host-gateway"

  kafka:
    container_name: "chii-base-kafka"
    image: 'bitnami/kafka:3.8'
    user: '0:0'
    volumes:
      - ./data/kafka:/bitnami/kafka
    expose:
      - 9092
      - 9093
    ports:
      - '29092:29092'
    environment:
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_LISTENERS: INTERNAL://:9092,EXTERNAL://:29092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://${CHII_HOST:-localhost}:29092,
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_CFG_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CFG_NUM_PARTITIONS: 1

      KAFKA_CFG_LOG_RETENTION_BYTES: '1073741824' # 1 GiB
      KAFKA_CFG_LOG_RETENTION_HOURS: '72'
      KAFKA_CFG_COMPRESSION_TYPE: 'zstd'

    healthcheck:
      test: kafka-topics.sh --list --bootstrap-server localhost:9092 || exit 1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10


  kafka-ui:
    image: docker.redpanda.com/redpandadata/console:latest
    ports:
      - '29093:8080'
    environment:
      KAFKA_BROKERS: 'kafka:9092'
