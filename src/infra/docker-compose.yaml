services:
  imaginary:
    image: h2non/imaginary
    init: true
    ports:
      - "9000:9000"

  meilisearch:
    container_name: "chii-base-meilisearch"
    image: "getmeili/meilisearch:v1.10.1"
    command:
      - meilisearch
      - --master-key
      - BOxvL-Zkwfnfe6cG-hfqCsP4LR0aQOnssytKDa4_zD0
    environment:
      MEILI_LOG_LEVEL: "WARN"
    ports:
      - "7700:7700"
    volumes:
      - ./data/meilisearch/:/meili_data/

  debezium:
    image: quay.io/debezium/server:3.1.0.Final
    container_name: debezium
    networks:
      - bangumi-dev
    user: "0:0"
    volumes:
      - ./data/debezium:/debezium/data
    environment:
      "quarkus.log.console.json": "false"
      "quarkus.log.level": "WARN"

      "debezium.format.key.schemas.enable": "false"
      "debezium.format.value.schemas.enable": "false"

      "debezium.sink.type": "kafka"
      "debezium.sink.kafka.producer.bootstrap.servers": "redpanda:9092"
      "debezium.sink.kafka.producer.key.serializer": "org.apache.kafka.common.serialization.StringSerializer"
      "debezium.sink.kafka.producer.value.serializer": "org.apache.kafka.common.serialization.StringSerializer"

      "debezium.source.offset.storage": "org.apache.kafka.connect.storage.FileOffsetBackingStore"
      "debezium.source.offset.storage.file.filename": "/debezium/data/offsets.dat"
      "debezium.source.topic.prefix": "debezium.chii"
      "debezium.source.schema.history.internal.kafka.topic": "debezium.history"
      "debezium.source.schema.history.internal.kafka.bootstrap.servers": "redpanda:9092"

      "debezium.source.connector.class": "io.debezium.connector.mysql.MySqlConnector"
      "debezium.source.database.hostname": "mysql"
      "debezium.source.database.port": "3306"
      "debezium.source.database.server.id": "5"
      "debezium.source.database.user": "root"
      "debezium.source.database.password": "secret"
      "debezium.source.database.server.name": "chii"
      "debezium.source.database.dbname": "bangumi"
      "debezium.source.database.include.list": "bangumi"
      "debezium.source.snapshot.mode": "initial"
      "debezium.source.snapshot.locking.mode": "none"

  kafka-ui:
    image: docker.redpanda.com/redpandadata/console:latest
    networks:
      - bangumi-dev
    ports:
      - "29093:8080"
    environment:
      KAFKA_BROKERS: "redpanda:9092"

networks:
  bangumi-dev:
    name: bangumi-dev
    external: true
