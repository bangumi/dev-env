name: Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - run: docker compose up -d

      - uses: actions/setup-python@v5
        with:
          cache: pip
          python-version: '3.10'

      - run: pip install -r requirements.txt

      - name: wait mysql ready
        run: bash ./wait_mysql_ready.sh

      - run: python test.py

      - run: docker compose logs
        if: "${{ failure() }}"

  test-each-file:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - run: |
          docker run -d -p '3306:3306' \
            -e 'MYSQL_ROOT_PASSWORD=secret' \
            -e 'MYSQL_DATABASE=bangumi' \
            -e 'MYSQL_USER=user' \
            -e 'MYSQL_PASSWORD=password' \
            'mysql:5.7.33' --sql-mode=""

      - uses: actions/setup-python@v5
        with:
          cache: pip
          python-version: '3.10'

      - run: pip install -r requirements.txt

      - name: wait mysql ready
        shell: bash
        run: |
          for _ in {1..60}; do
          # your-unix-command-here
            if mysqladmin ping -h "127.0.0.1" --silent; then
              exit 0
            fi
            sleep 0.5
          done

          echo "timeout"

          exit 1

      - run: python test-each-file.py


  build:
    needs: [ test,test-each-file ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - run: docker compose up -d

      - name: wait mysql ready
        run: bash ./wait_mysql_ready.sh

      - run: |
          mysqldump \
            -h 127.0.0.1 -u root -psecret \
            --databases bangumi \
            --skip-dump-date \
            --order-by-primary \
            --no-create-db \
            --hex-blob \
            --extended-insert=FALSE | sed '/USE `bangumi`;/d' > ./dist/dist.sql

      - run: docker compose logs
        if: "${{ failure() }}"

      - run: cp ./wait_mysql_ready.sh dist
      - run: cp -r mq dist
      - run: cp -r micro-services dist

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v4
        if: github.event_name == 'push'
        with:
          publish_dir: ./dist/
          commit_message: deploy ${{ github.ref }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
